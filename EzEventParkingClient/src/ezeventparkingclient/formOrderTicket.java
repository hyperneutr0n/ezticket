/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ezeventparkingclient;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.List;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;

/**
 *
 * @author ASUS
 */
public class formOrderTicket extends javax.swing.JFrame {

    /**
     * Creates new form formOrderTicket
     */
    public ArrayList<String> listBoughtTickets = new ArrayList<>();
    Socket clientSocket;
    BufferedReader msgFromServer;
    DataOutputStream msgToServer;
    public int count;

    public formOrderTicket() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        labelAvailable = new javax.swing.JLabel();
        labelOccupied = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        panelTicket = new javax.swing.JPanel();
        labelTicket = new javax.swing.JLabel();
        labelLokasi = new javax.swing.JLabel();
        btnOrder = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        labelAccount = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        labelbiasa1 = new javax.swing.JLabel();
        labelDate = new javax.swing.JLabel();
        labelbiasa2 = new javax.swing.JLabel();
        labelbiasa3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 102, 51));
        jPanel1.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Available:");

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Occupied:");

        labelAvailable.setForeground(new java.awt.Color(0, 0, 0));
        labelAvailable.setText("lorem");

        labelOccupied.setForeground(new java.awt.Color(0, 0, 0));
        labelOccupied.setText("lorem");

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Total:");

        labelTotal.setForeground(new java.awt.Color(0, 0, 0));
        labelTotal.setText("lorem");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelAvailable))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTotal)
                            .addComponent(labelOccupied))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelAvailable))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labelOccupied))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(labelTotal))
                .addContainerGap(113, Short.MAX_VALUE))
        );

        panelTicket.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelTicketLayout = new javax.swing.GroupLayout(panelTicket);
        panelTicket.setLayout(panelTicketLayout);
        panelTicketLayout.setHorizontalGroup(
            panelTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 619, Short.MAX_VALUE)
        );
        panelTicketLayout.setVerticalGroup(
            panelTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 301, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(40, 110, 874, 331);

        labelTicket.setForeground(new java.awt.Color(0, 0, 0));
        labelTicket.setText("A1,A2,A4");
        jPanel1.add(labelTicket);
        labelTicket.setBounds(710, 600, 110, 21);

        labelLokasi.setForeground(new java.awt.Color(0, 0, 0));
        labelLokasi.setText("OHIO");
        jPanel1.add(labelLokasi);
        labelLokasi.setBounds(710, 540, 110, 21);

        btnOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnOrder.setText("ORDER");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });
        jPanel1.add(btnOrder);
        btnOrder.setBounds(830, 630, 90, 29);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setForeground(new java.awt.Color(0, 0, 0));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Event");

        labelAccount.setBackground(new java.awt.Color(255, 255, 255));
        labelAccount.setForeground(new java.awt.Color(255, 255, 255));
        labelAccount.setText("SIGMA");

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("EZTICKETING");

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Ticket");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Available:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel10)
                .addGap(44, 44, 44)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 550, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelAccount)
                .addGap(26, 26, 26))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(labelAccount)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6))
                .addGap(31, 31, 31))
        );

        jPanel1.add(jPanel5);
        jPanel5.setBounds(-8, 0, 970, 88);
        jPanel5.getAccessibleContext().setAccessibleParent(jPanel5);

        labelbiasa1.setForeground(new java.awt.Color(0, 0, 0));
        labelbiasa1.setText("Booked Tickets:");
        jPanel1.add(labelbiasa1);
        labelbiasa1.setBounds(600, 600, 110, 21);

        labelDate.setForeground(new java.awt.Color(0, 0, 0));
        labelDate.setText("DATE");
        jPanel1.add(labelDate);
        labelDate.setBounds(710, 570, 110, 21);

        labelbiasa2.setForeground(new java.awt.Color(0, 0, 0));
        labelbiasa2.setText("Tanggal:");
        jPanel1.add(labelbiasa2);
        labelbiasa2.setBounds(600, 570, 110, 21);

        labelbiasa3.setForeground(new java.awt.Color(0, 0, 0));
        labelbiasa3.setText("Lokasi:");
        jPanel1.add(labelbiasa3);
        labelbiasa3.setBounds(600, 540, 110, 21);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        try {
            // TODO add your handling code here:
            clientSocket = new Socket("localhost", 6000);
            String ticket = labelTicket.getText();
            String msg = "PARKING/ORDER/" + ticket + "/" + labelDate.getText() + " 00:00:00";
            sendMessage(msg);

            String response = getMessage();

            if (response.equals("SUCCESS")) {

            } else {

            }

        } catch (Exception ex) {
            System.out.println("Error di formOrderTicket Order");
        }

    }//GEN-LAST:event_btnOrderActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        listBoughtTickets.add("A1");
        listBoughtTickets.add("B1");
        listBoughtTickets.add("D6");
        listBoughtTickets.add("G7");
        GenerateCheckBoxes("100");
        updateCheckboxes(listBoughtTickets);
        enableCheckboxes(listBoughtTickets);
        labelTicket.setText("");
//        try {
//            clientSocket = new Socket("localhost", 6000);
//            String msg = "PARKING/CAPACITY";
//            sendMessage(msg);
//            String capacity = getMessage();
//            if (!capacity.equals("FAIL")) {
//                GenerateCheckBoxes(capacity);
//            }
//        } catch (Exception ex) {
//            System.out.println("Error di formOrderTicket windowOpened " + ex);
//        }

    }//GEN-LAST:event_formWindowOpened

    public void GenerateCheckBoxes(String maxSlot) {
        int capacity = Integer.valueOf(maxSlot);
        int columns = 10;
        int rows = capacity / columns;

        panelTicket.setPreferredSize(new Dimension(630, 250));
        panelTicket.setLayout(new GridLayout(rows, columns));

        for (int i = 0; i < rows; i++) {
            char rowLetter = (char) ('A' + i);
            for (int j = 1; j <= columns; j++) {
                JCheckBox checkBox = new JCheckBox(rowLetter + String.valueOf(j));

                checkBox.setEnabled(true);
                checkBox.addItemListener(new ItemListener() {
                    public void itemStateChanged(ItemEvent e) {
                        if (e.getStateChange() == ItemEvent.SELECTED) {
                            disableOtherCheckboxes(checkBox);
                            labelTicket.setText(checkBox.getText());
                        } else if (e.getStateChange() == ItemEvent.DESELECTED) {
                            enableCheckboxes(listBoughtTickets);
                            labelTicket.setText("");
                        }
                    }
                });
                panelTicket.add(checkBox);
            }
        }
        panelTicket.revalidate();
        panelTicket.repaint();
    }

    public void updateCheckboxes(ArrayList<String> listBoughtTickets) {
        Component[] components = panelTicket.getComponents();

        for (Component component : components) {
            if (component instanceof JCheckBox) {
                JCheckBox checkBox = (JCheckBox) component;
                String checkBoxName = checkBox.getText();

                checkBox.setEnabled(true);
                checkBox.setSelected(false);
                System.out.println("Checkbox: " + checkBoxName + " Enabled: " + checkBox.isEnabled() + " Selected: " + checkBox.isSelected());

                if (listBoughtTickets.contains(checkBoxName)) {
                    checkBox.setSelected(true);
                    checkBox.setEnabled(false);
                    System.out.println("Checkbox in listBoughtTickets: " + checkBoxName + " Enabled: " + checkBox.isEnabled() + " Selected: " + checkBox.isSelected());
                }
            }
        }
        panelTicket.revalidate();
        panelTicket.repaint();
    }

    private void disableOtherCheckboxes(JCheckBox selectedCheckbox) {
        Component[] components = panelTicket.getComponents();

        for (Component component : components) {
            if (component instanceof JCheckBox) {
                JCheckBox checkBox = (JCheckBox) component;

                if (checkBox != selectedCheckbox) {
                    checkBox.setEnabled(false);
                }
            }
        }
        panelTicket.revalidate();
        panelTicket.repaint();
    }

    private void enableCheckboxes(ArrayList<String> listBoughtTickets) {
        Component[] components = panelTicket.getComponents();

        for (Component component : components) {
            if (component instanceof JCheckBox) {
                JCheckBox checkBox = (JCheckBox) component;
                String checkBoxName = checkBox.getText();

                if (!listBoughtTickets.contains(checkBoxName)) {
                    checkBox.setEnabled(true);
                }
            }
        }
        panelTicket.revalidate();
        panelTicket.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formOrderTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formOrderTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formOrderTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formOrderTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formOrderTicket().setVisible(true);
            }
        });
    }

    public void sendMessage(String s) {
        try {
            msgToServer = new DataOutputStream(clientSocket.getOutputStream());

        } catch (Exception e) {
        }
    }

    public String getMessage() {
        String chatServer = "";
        try {
            msgFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
            chatServer = msgFromServer.readLine();
        } catch (Exception ex) {
        }

        return chatServer;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrder;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel labelAccount;
    private javax.swing.JLabel labelAvailable;
    public javax.swing.JLabel labelDate;
    public javax.swing.JLabel labelLokasi;
    private javax.swing.JLabel labelOccupied;
    private javax.swing.JLabel labelTicket;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel labelbiasa1;
    private javax.swing.JLabel labelbiasa2;
    private javax.swing.JLabel labelbiasa3;
    private javax.swing.JPanel panelTicket;
    // End of variables declaration//GEN-END:variables
}
